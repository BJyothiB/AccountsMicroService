version: 0.2
phases:
  pre_build:
    commands:

      - echo Logging in to Amazon ECR...
      - AWS_REGION=us-west-1
      - AWS_ACCOUNT_ID=615299733509
      - echo accountID- $AWS_ACCOUNT_ID
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Granting execution permissions to Gradle wrapper...
      - chmod +x ./gradlew
      - echo Cleaning up previous builds...
      - ./gradlew clean

  build:
    commands:
      - echo Building the application with Gradle...
      - ./gradlew build
      - echo Build started on `date`
        - echo Building the Docker image...
        - docker build -t $REPOSITORY_URI:latest .
        - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Tagging the Docker image...
      - echo post-build img-repo $IMAGE_REPO_NAME
      - echo post-build accID $AWS_ACCOUNT_ID and region $AWS_REGION
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Pushing the Docker image to AWS ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      - REPOSITORY_URI=615299733509.dkr.ecr.us-west-1.amazonaws.com/tekarch/boarepo
      - printf '[{"name":"accountms-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      - # add your container name
      - DOCKER_CONTAINER_NAME=tekarch/boarepo
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Build process completed successfully.
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
  artifacts:
  files:
    - imagedefinitions.json
    - build/libs/*.jar